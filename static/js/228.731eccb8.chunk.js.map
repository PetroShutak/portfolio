{"version":3,"file":"static/js/228.731eccb8.chunk.js","mappings":"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","sources":["components/ProjectItem/ProjectItem.styled.jsx","components/ProjectItem/ProjectItem.jsx","components/ProjectsList/ProjectsList.styled.jsx","components/ProjectsList/ProjectsList.jsx","pages/ProjectsPage.jsx"],"sourcesContent":["import { AiFillGithub } from 'react-icons/ai';\nimport { GoLinkExternal } from 'react-icons/go';\nimport styled from 'styled-components';\n\nexport const ProjectItemContainer = styled.div`\n  width: 360px;\n  height: auto;\n  padding: 24px;\n  border-radius: 15px;\n  border: 1px solid #ccc;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  text-align: center;\n  box-shadow: inset 0px 0px 15px 0px rgba(0, 0, 0, 0.75);\n  margin: 24px;\n  background-color: rgba(255, 255, 255, 0.5) ;\n  a {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const StyledGithubIcon = styled(AiFillGithub)`\n  font-size: 1.5rem;\n  color: #282c34;\n  transition: all 0.3s ease;\n\n  &:hover {\n    color: #563d7c;\n    transform: scale(1.2);\n  }\n`;\n\nexport const StyledExternalLinkIcon = styled(GoLinkExternal)`\n  font-size: 1.5rem;\n  color: #282c34;\n  transition: all 0.3s ease;\n\n  &:hover {\n    color: #daa520;\n    transform: scale(1.2);\n  }\n`;\n\nexport const ImageCard = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 15px;\n  border: 0.5px solid #ccc;\n  margin-bottom: 24px;\n  transition: 0.5s;\n  &:hover {\n    cursor: zoom-in;\n    transform: scale(1.1);\n    transition: 0.5s;\n  }\n`;\nexport const Desc = styled.p`\n  font-size: 1.2rem;\n  line-height: 1.5;\n  display: flex;\n  justify-content: center;\n  gap: 8px;\n`;\n\nexport const Modal = styled.div`\n  display: block;\n  position: fixed;\n  z-index: 1;\n  padding: 20px;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background: rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(3px);\n`;\n\nexport const ModalContent = styled.div`\n  background-color: #fefefe;\n  margin: auto;\n  padding: 20px;\n  border-radius: 15px;\n  border: 1px solid #888;\n  width: 80%;\n  img {\n    width: 100%;\n    height: auto;\n    border-radius: 15px;\n    margin-bottom: 24px;\n  }\n  p {\n    text-align: left;\n    margin: 0;\n  }\n  .close {\n    color: #aaa;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n    &:hover,\n    &:focus {\n      color: black;\n      text-decoration: none;\n      cursor: pointer;\n    }\n  }\n`;\nexport const Placeholder = styled.div`\n  width: 100%;\n  height: 400px;\n  background-color: #ccc;\n  border-radius: 15px;\n  margin-bottom: 24px;\n`;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport {\n  ProjectItemContainer,\n  Modal,\n  ModalContent,\n  ImageCard,\n  Desc,\n  Placeholder,\n} from './ProjectItem.styled';\nimport { StyledGithubIcon, StyledExternalLinkIcon } from './ProjectItem.styled';\n\nconst ProjectItem = ({ title, url, repository, image, description }) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [selectedDescription, setSelectedDescription] = useState(null);\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  useEffect(() => {\n    const handleEscape = event => {\n      if (event.key === 'Escape') {\n        closeModal();\n      }\n    };\n\n    if (modalOpen) {\n      document.addEventListener('keydown', handleEscape);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n    };\n  }, [modalOpen]);\n\n  const openModal = () => {\n    setSelectedImage(image);\n    setSelectedDescription(description);\n    setImageLoaded(false);\n    setModalOpen(true);\n  };\n  const closeModal = e => {\n    setModalOpen(false);\n  };\n\n  const handleImageClick = () => {\n    if (!modalOpen) {\n      openModal();\n    }\n  };\n\n  const handleImageLoaded = () => {\n    setImageLoaded(true);\n  };\n\n  const handleCloseModal = event => {\n    if (event.target.classList.contains('backdrop')) {\n      closeModal();\n    }\n  };\n\n  return (\n    <ProjectItemContainer>\n      <ImageCard src={image} alt={title} onClick={handleImageClick} />\n      <h3>{title}</h3>\n      <Desc>\n        {' '}\n        Live demo:\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {<StyledExternalLinkIcon />}\n        </a>\n      </Desc>\n      <Desc>\n        {' '}\n        Code:\n        <a href={repository} target=\"_blank\" rel=\"noopener noreferrer\">\n          {<StyledGithubIcon />}\n        </a>\n      </Desc>\n      {modalOpen && (\n        <Modal className=\"backdrop\" onClick={handleCloseModal}>\n          <ModalContent>\n            <span className=\"close\" onClick={closeModal}>\n              &times;\n            </span>\n            <div\n              style={{\n                display: 'flex',\n                gap: '20px',\n                alignItems: 'center',\n                marginBottom: '20px',\n              }}\n            >\n              <h1>{title}</h1>\n              <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {<StyledExternalLinkIcon />}\n              </a>\n            </div>\n            {!imageLoaded && <Placeholder />}\n            {selectedImage && (\n              <img\n                src={selectedImage}\n                alt={title}\n                style={{ display: imageLoaded ? 'block' : 'none' }}\n                onLoad={handleImageLoaded}\n              />\n            )}\n            <p>{selectedDescription}</p>\n          </ModalContent>\n        </Modal>\n      )}\n    </ProjectItemContainer>\n  );\n};\n\nexport default ProjectItem;\n","import styled from 'styled-components';\n\nexport const ProjectsListConteiner = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  gap: 24px;\n  padding: 16px;\n  justify-items: center;\n  box-shadow: inset 0px 0px 15px 0px rgba(0, 0, 0, 0.75);\n`;\n","import React from 'react';\nimport ProjectItem from '../ProjectItem/ProjectItem';\nimport projectsData from '../data/projects'; \nimport { ProjectsListConteiner } from './ProjectsList.styled';\n\nconst ProjectsList = () => {\n  return (\n    \n    <ProjectsListConteiner>\n      {projectsData.map((project) => (\n          <ProjectItem key={project.id} {...project} />\n          ))}\n          </ProjectsListConteiner>\n    \n  );\n};\n\nexport default ProjectsList;\n","import ProjectsList from 'components/ProjectsList/ProjectsList';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst ProjectsPage = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Projects</title>\n      </Helmet>\n      <ProjectsList />\n    </div>\n  );\n};\n\nexport default ProjectsPage;\n"],"names":["ProjectItemContainer","styled","div","_templateObject","_taggedTemplateLiteral","StyledGithubIcon","AiFillGithub","_templateObject2","StyledExternalLinkIcon","GoLinkExternal","_templateObject3","ImageCard","img","_templateObject4","Desc","p","_templateObject5","Modal","_templateObject6","ModalContent","_templateObject7","Placeholder","_templateObject8","_ref","title","url","repository","image","description","modalOpen","setModalOpen","useState","selectedImage","setSelectedImage","selectedDescription","setSelectedDescription","imageLoaded","setImageLoaded","useEffect","handleEscape","event","key","closeModal","document","addEventListener","removeEventListener","e","_jsxs","children","_jsx","src","alt","onClick","handleImageClick","href","target","rel","className","classList","contains","style","display","gap","alignItems","marginBottom","onLoad","handleImageLoaded","ProjectsListConteiner","ProjectsList","projectsData","map","project","ProjectItem","id","ProjectsPage","Helmet"],"sourceRoot":""}